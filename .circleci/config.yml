version: 2

jobs:
  build_frontend:
    docker:
      - image: circleci/node:8-browsers
    steps:
      - checkout
      - restore_cache:
          key: node-modules-{{ checksum "yarn.lock" }}
      - run:
          name: Install dependencies
          command: yarn install
      - save_cache:
          key: node-modules-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
      - run:
          name: Run tests
          command: yarn test
      - run:
          name: Run build
          command: yarn run build
      - run:
          name: Run storybook build
          command: yarn run build:storybook
      - persist_to_workspace:
          root: .
          paths:
            - build

  build_server:
    docker:
      - image: circleci/python:3.6.4
    steps:
      - checkout
      - run:
          name: Setup env vars
          command: cp product_search/.sample.env product_search/.env
      - run:
          name: Install dependencies
          command: pipenv install --dev
      - run:
          name: Run tests
          command: pipenv run pytest .

  deploy_server:
    docker:
      - image: buildpack-deps:trusty
    steps:
      - checkout
      - run:
          name: Deploy  server
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP.git master -f

  deploy_frontend:
    docker:
      - image: circleci/node:8-browsers
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Install netlify cli
          command:
            wget -qO- 'https://cli.netlify.com/download/latest/linux' | tar xz
      - run:
          name: Deploy to netlify
          command: ./netlifyctl -A $NETLIFY_AUTH_TOKEN -b build deploy

workflows:
  version: 2
  main:
    jobs:
      - build_frontend
      - build_server
      - deploy_frontend:
          requires:
            - build_frontend
            - build_server
          filters:
            branches:
              only: master
      - deploy_server:
          requires:
            - build_frontend
            - build_server
          filters:
            branches:
              only: master
